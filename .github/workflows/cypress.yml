name: Cypress Tests with Lighthouse

on:
  workflow_dispatch:
    inputs:
      run_lighthouse:
        description: 'Run Lighthouse audit'
        required: false
        default: 'false'
        type: choice
        options:
          - 'true'
          - 'false'
      run_purchase_flow:
        description: 'Run Purchase Flow with Cypress'
        required: false
        default: 'true'
        type: choice
        options:
          - 'true'
          - 'false'

jobs:
  cypress-run:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16' 

      - name: Install dependencies
        run: npm install

    
      - name: Run Lighthouse audit
        if: ${{ inputs.run_lighthouse == 'true' }}
        run: |
          # Ejecuta Lighthouse y guarda los resultados en JSON
          mkdir -p cypress/reports
          npx lighthouse https://automationexercise.com --output=json --output-path=./cypress/reports/lighthouseReport.json
          
          # Muestra el contenido del reporte para confirmaci√≥n
          cat ./cypress/reports/lighthouseReport.json

    
      - name: Run Cypress tests
        if: ${{ inputs.run_purchase_flow == 'true' }}
        env:
          CYPRESS_RECORD_KEY: 7fd66628-1f11-4099-bb96-8ccaaa5b301f 
        run: |
          # Ejecuta las pruebas de Cypress y graba los resultados en el dashboard
          npx cypress run --record --spec "cypress/e2e/productPurchase.cy.js"

   
      - name: Upload Lighthouse report
        if: ${{ inputs.run_lighthouse == 'true' }} && always() # Asegura que se ejecute incluso si los tests fallan
        uses: actions/upload-artifact@v3
        with:
          name: lighthouse-report
          path: cypress/reports/lighthouseReport.json
          retention-days: 7 